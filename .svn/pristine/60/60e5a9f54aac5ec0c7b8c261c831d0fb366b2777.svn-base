<?php

/*
|--------------------------------------------------------------------------
| Application & Route Filters
|--------------------------------------------------------------------------
|
| Below you will find the "before" and "after" events for the application
| which may be used to do any work before or after a request into your
| application. Here you may also register your custom route filters.
|
*/

Route::filter('members_auth',function(){
	//If already logged in go to dashboard or else login 	
	if(!Sentry::check()){
		return Redirect::to('/login');
	}
	
	//return Redirect::to('/');
});

//my user  filter 
Route::filter('dashboard_auth', function(){
	if(!(Users::userCheck())){
		return Redirect::to('/login');
	}
});

Route::filter('band_auth', function(){
	if(!(Users::bandFuck())){
		return Redirect::to('/login');
	}
});

Route::filter('publisher_auth', function(){
	if(!(Users::publisherFuck())){
		return Redirect::to('/login');
	}
});
Route::filter('admin_auth', function(){
	if(!(Users::adminFuck())){
		return Redirect::to('/login');
	}
});

Route::filter('go_dashboard', function(){
	if(Users::dashboardCheck()){
		$go_to_dashboard = Session::get('role');

		if($go_to_dashboard == 2){
			return Redirect::route('getlicenses.create');
		}
		if($go_to_dashboard == 3){
			return Redirect::route('dashboards.index');
		}
		if($go_to_dashboard == 1){
			return Redirect::route('mudiadmins.index');
		}

	}
});
Route::filter('languagechange', function(){
	$languageid = Session::get('languageid');
	if($languageid == 1){
		App::setLocale('du');
	}
	if($languageid == 2){
		App::setLocale('en');
	}
});
//end of my user filter

App::before(function($request)
{
	//
});


App::after(function($request, $response)
{
	//
});

/*
|--------------------------------------------------------------------------
| Authentication Filters
|--------------------------------------------------------------------------
|
| The following filters are used to verify that the user of the current
| session is logged into this application. The "basic" filter easily
| integrates HTTP Basic authentication for quick, simple checking.
|
*/

Route::filter('auth', function()
{
	if (Auth::guest())
	{
		if (Request::ajax())
		{
			return Response::make('Unauthorized', 401);
		}
		else
		{
			return Redirect::guest('login');
		}
	}
});


Route::filter('auth.basic', function()
{
	return Auth::basic();
});

/*
|--------------------------------------------------------------------------
| Guest Filter
|--------------------------------------------------------------------------
|
| The "guest" filter is the counterpart of the authentication filters as
| it simply checks that the current user is not logged in. A redirect
| response will be issued if they are, which you may freely change.
|
*/

Route::filter('guest', function()
{
	if (Auth::check()) return Redirect::to('/');
});

/*
|--------------------------------------------------------------------------
| CSRF Protection Filter
|--------------------------------------------------------------------------
|
| The CSRF filter is responsible for protecting your application against
| cross-site request forgery attacks. If this special token in a user
| session does not match the one given in this request, we'll bail.
|
*/

Route::filter('csrf', function()
{
	if (Session::token() != Input::get('_token'))
	{
		throw new Illuminate\Session\TokenMismatchException;
	}
});
